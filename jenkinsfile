pipeline {
    agent {
        docker {
            image 'maven:3.8.4-openjdk-17'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    tools {
        maven 'maven3'
    }
    environment {
        SONARQUBE_SCANNER_HOME = tool 'sonarqube'
        SONAR_TOKEN = credentials('sonarqube-token')
        SONAR_HOST_URL = 'http://172.17.0.3:9000'
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'master',
                    credentialsId: 'Github_cred',
                    url: 'https://github.com/nikitaks97/Maven_repository.git'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install -DskipTests'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube-server') {
                    sh """
                        ${SONARQUBE_SCANNER_HOME}/bin/sonar-scanner
                        #-Dsonar.projectKey=Maven_repository \
                        # -Dsonar.java.binaries=target/classes \
                        #-Dsonar.host.url=${SONAR_HOST_URL} \
                        #-Dsonar.login=${SONAR_TOKEN}
                    """
                }
            }
        }
        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('Package') {
            steps {
                sh 'mvn package -DskipTests'
            }
        }
    }
}
